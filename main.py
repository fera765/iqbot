#!/usr/bin/env python3
"""
Rob√¥ de Trading IQ Option
Autor: AI Assistant
Vers√£o: 1.0.0

Este rob√¥ automatiza opera√ß√µes na IQ Option usando diferentes estrat√©gias
de an√°lise t√©cnica como RSI, MACD e Bandas de Bollinger.
"""

import sys
import argparse
from config import Config
from trading_bot import IQOptionBot

def main():
    """Fun√ß√£o principal"""
    parser = argparse.ArgumentParser(description='IQ Option Trading Bot')
    parser.add_argument('--mode', choices=['live', 'backtest'], default='live',
                       help='Modo de execu√ß√£o: live (real) ou backtest (simula√ß√£o)')
    parser.add_argument('--days', type=int, default=7,
                       help='N√∫mero de dias para backtest (apenas no modo backtest)')
    parser.add_argument('--config', type=str, default='config.py',
                       help='Arquivo de configura√ß√£o')
    
    args = parser.parse_args()
    
    print("=" * 50)
    print("ü§ñ IQ OPTION TRADING BOT")
    print("=" * 50)
    print(f"Modo: {args.mode.upper()}")
    print(f"Ativo: {Config.ASSET}")
    print(f"Estrat√©gia: {Config.STRATEGY}")
    print(f"Valor por opera√ß√£o: ${Config.AMOUNT}")
    print(f"Expira√ß√£o: {Config.EXPIRATION} min")
    print("=" * 50)
    
    # Verifica credenciais
    if not Config.EMAIL or not Config.PASSWORD:
        print("‚ùå ERRO: Credenciais n√£o configuradas!")
        print("Configure suas credenciais no arquivo .env:")
        print("IQ_EMAIL=seu_email@exemplo.com")
        print("IQ_PASSWORD=sua_senha")
        sys.exit(1)
    
    # Cria inst√¢ncia do rob√¥
    bot = IQOptionBot(Config)
    
    try:
        if args.mode == 'live':
            print("üöÄ Iniciando rob√¥ em modo LIVE...")
            print("‚ö†Ô∏è  ATEN√á√ÉO: Este modo far√° opera√ß√µes reais com dinheiro!")
            print("Pressione Ctrl+C para parar o rob√¥")
            print("-" * 50)
            
            # Executa o rob√¥
            bot.run()
            
        elif args.mode == 'backtest':
            print(f"üß™ Iniciando BACKTEST por {args.days} dias...")
            print("Este modo simula opera√ß√µes sem usar dinheiro real")
            print("-" * 50)
            
            # Executa backtest
            bot.run_backtest(args.days)
    
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Rob√¥ interrompido pelo usu√°rio")
    except Exception as e:
        print(f"‚ùå Erro inesperado: {str(e)}")
    finally:
        print("üëã Rob√¥ finalizado")

if __name__ == "__main__":
    main()